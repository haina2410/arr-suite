services:
  wireguard:
    image: ghcr.io/linuxserver/wireguard
    container_name: wireguard
    hostname: wireguard
    networks:
      wireguard_net:
        ipv4_address: 10.0.1.100
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Ho_Chi_Minh
    privileged: true
    volumes:
      - ./configs/wireguard:/config
      - /lib/modules:/lib/modules
    ports:
      - 8180:8180 #qbittorrent
      - 6881:6881 #qbittorrent
      - 6881:6881/udp #qbittorrent
      - 8280:8280 #sabnzb
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=1
    restart: "always" # no | always | on-failure | unless-stopped
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    depends_on:
      - wireguard
    network_mode: service:wireguard
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Ho_Chi_Minh
      - WEBUI_PORT=8180
    volumes:
      - ./configs/qbittorrent:/config
      - /mnt/328261E68261AED3/DATA/downloads:/_downloads
    restart: unless-stopped # no | always | on-failure | unless-stopped
    #  transmission:
    #    #image: ghcr.io/linuxserver/transmission # downloads hang ... trying v3 below from a reddit post
    #    image: linuxserver/transmission:version-3.00-r0
    #    container_name: transmission
    #    #hostname: transmission #produces an error against network-mode
    #    depends_on:
    #      - wireguard
    #    network_mode: service:wireguard
    #    environment:
    #      - PUID=1000
    #     - PGID=1000
    #      - TZ=Asia/Ho_Chi_Minh
    #      #- WHITELIST=127.0.0.1,10.*,100.*,localhost,*.local #this breaks the older v3
    #    volumes:
    #      - ./configs/transmission:/config
    #      - ./configs/_downloads:/media/_downloads
    #     - ./configs/_downloads/_watch:/media/_downloads/_watch
    #      - ./configs/_downloads/_intermediate:/media/_downloads/_intermediate
    #    restart: "always" # no | always | on-failure | unless-stopped
    #  nzbget:
    #    image: ghcr.io/linuxserver/nzbget
    #    container_name: nzbget
    #hostname: nzbget #produces an error against network-mode
    #    depends_on:
    #      - wireguard
    #    network_mode: service:wireguard
    #    environment:
    #      - PUID=1000
    #      - PGID=1000
    #      - TZ=Asia/Ho_Chi_Minh
    #    ports:
    #    volumes:
    #      - ./configs/nzbget:/config
    #      - ./configs/nzbget/logs:/nzb_logs
    #      - ./configs/_downloads:/media/_downloads
    #      - ./configs/_downloads/_watch:/media/_downloads/_watch
    #      - ./configs/_downloads/_intermediate:/media/_downloads/_intermediate
    #    restart: "always" # no | always | on-failure | unless--stopped
    # sabnzb:
    #   image: lscr.io/linuxserver/sabnzbd:latest
    #   container_name: sabnzb
    #   #hostname: nzbget #produces an error against network-mode
    #   depends_on:
    #     - wireguard
    #   network_mode: service:wireguard
    #   environment:
    #     - PUID=1000
    #     - PGID=1000
    #     - TZ=Asia/Ho_Chi_Minh
    #   volumes:
    #     - ./configs/sabnzb:/config
    #     - /mnt/328261E68261AED3/DATA/downloads:/_downloads
    #      - ./configs/_downloads/_incomplete:/incomplete-downloads #optional
    # restart: "always" # no | always | on-failure | unless--stopped
    #  jackett:
    #    image: ghcr.io/linuxserver/jackett
    #    container_name: jackett
    #    hostname: jackett
    #    environment:
    #      - PUID=1000
    #      - PGID=1000
    #      - TZ=Asia/Ho_Chi_Minh
    #      #- UMASK=002
    #      #- AUTO_UPDATE=true
    #    ports:
    #      - 9117:9117 #jackett
    #    volumes:
    #      - ./configs/jackett:/config
    #    restart: "always" # no | always | on-failure | unless--stopped
  prowlarr:
    image: ghcr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    hostname: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Ho_Chi_Minh
    ports:
      - 9696:9696 #prowlarr
    volumes:
      - ./configs/prowlarr:/config
    restart: "always" # no | always | on-failure | unless--stopped
  sonarr:
    image: ghcr.io/linuxserver/sonarr
    container_name: sonarr
    hostname: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Ho_Chi_Minh
      #- UMASK=002
    ports:
      - 8989:8989 #sonarr
    volumes:
      - ./configs/sonarr:/config
      - /mnt/328261E68261AED3/TV:/TV
      - /mnt/328261E68261AED3/DATA/downloads:/_downloads
    restart: "always" # no | always | on-failure | unless--stopped
  radarr:
    image: ghcr.io/linuxserver/radarr
    container_name: radarr
    hostname: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Ho_Chi_Minh
      #- UMASK=002
    ports:
      - 7878:7878 #radarr
    volumes:
      - ./configs/radarr:/config
      - /mnt/328261E68261AED3/Movies:/Movies
      - /mnt/328261E68261AED3/DATA/downloads:/_downloads
    restart: "always" # no | always | on-failure | unless--stopped
  #  lidarr:
  #    image: ghcr.io/linuxserver/lidarr
  #    container_name: lidarr
  #    hostname: lidarr
  #    environment:
  #      - PUID=1000
  #      - PGID=1000
  #      - TZ=Asia/Ho_Chi_Minh
  #      #- UMASK=002
  #    ports:
  #     - 8686:8686 #lidarr
  #    volumes:
  #     - ./configs/lidarr:/config
  #     - /mnt/synology-music:/media/music
  #     - ./configs/_downloads:/media/_downloads
  #    restart: "always" # no | always | on-failure | unless--stopped
  #  readarr:
  #    image: lscr.io/linuxserver/readarr:develop
  #    container_name: readarr
  #    hostname: readarr
  #    environment:
  #      - PUID=1000
  #      - PGID=1000
  #      - TZ=Asia/Ho_Chi_Minh
  #      #- UMASK=002
  #    ports:
  #      - 8787:8787 #readarr
  #   volumes:
  #      - ./configs/readarr:/config
  #      - /mnt/synology-audiobooks:/media/audiobooks
  #      - /mnt/synology-ebooks:/media/ebooks
  #      - ./configs/_downloads:/media/_downloads
  #    restart: "always" # no | always | on-failure | unless--stopped
  #  m4b-tool: # use the alias tool    https://github.com/sandreas/m4b-tool#docker
  #  example:
  #         alias m4b-tool='docker run -it --rm -u $(id -u):$(id -g) -v "$(pwd)/_downloads":/media/_downloads sandreas/m4b-tool:latest'
  #         m4b-tool merge "/media/_downloads/audiobooks/Project Hail Mary (2021)/" --output-file="/media/_downloads/audiobooks/Project Hail Mary.m4b"
  #  
  #
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    # network_mode: 'host'
    volumes:
      - ./configs/jellyfin:/config
      - ./.cache/jellyfin:/cache
      - type: bind
        source: /mnt/328261E68261AED3/TV
        target: /TV
        read_only: true
      - type: bind
        source: /mnt/328261E68261AED3/Movies
        target: /Movies
        read_only: true
      # Optional - extra fonts to be used during transcoding with subtitle burn-in
      - type: bind
        source: /usr/local/share/fonts
        target: /usr/local/share/fonts/custom
        read_only: true
    ports:
      - 8096:8096 # HTTP
      - 8920:8920 # HTTPS
      - 1900:1900/udp
      - 7359:7359/udp
    restart: unless-stopped
    # Optional - alternative address used for autodiscovery
    environment:
      - TZ=Asia/Ho_Chi_Minh
    #   - JELLYFIN_PublishedServerUrl=http://example.com
    # Optional - may be necessary for docker healthcheck to pass if running in host network mode
    # extra_hosts:
    #   - 'host.docker.internal:host-gateway'
  bazarr:
    image: ghcr.io/linuxserver/bazarr
    container_name: bazarr
    depends_on:
      - wireguard
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Ho_Chi_Minh
      #- UMASK=002
    ports:
      - 6767:6767 #bazarr
    volumes:
      - ./configs/bazarr:/config
      - /mnt/328261E68261AED3/Movies:/Movies
      - /mnt/328261E68261AED3/TV:/TV
    restart: "always" # no | always | on-failure | unless--stopped
#  tubesync: # not supported on ARM / AARCH64 yet
#    image: ghcr.io/meeb/tubesync:latest # unofficial from https://github.com/BigCheeZ/tubesync/tree/aarch64_support
#    container_name: tubesync
#    hostname: tubesync
#    environment:
#      - PUID=1000
#      - PGID=1000
#      - TZ=Asia/Ho_Chi_Minh
#      #- UMASK=002
#    ports:
#      - 4848:4848 #tubesync
#    volumes:
#      - ./configs/tubesync:/config
#      - /mnt/synology-youtube:/downloads
#    restart: "no" # no | always | on-failure | unless--stopped

networks:
  wireguard_net:
    ipam:
      driver: default
      config:
        - subnet: 10.0.1.0/24

#volumes:
#  synology-tv:
#    driver: local
#    driver_opts:
#      type: cifs
#      o: username=servarr,password=cac3uXpC5WY8UTgiYQS2,uid=1031,gid=100,file_mode=0777,dir_mode=0777
#      device: "//10.0.0.10/tv"
